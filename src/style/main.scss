@import "../../bower_components/bootstrap/scss/_variables.scss";
@import "../../bower_components/bootstrap/scss/_mixins.scss";
@import "../../bower_components/bootstrap/scss/_normalize.scss";
@import "../../bower_components/bootstrap/scss/_reboot.scss";
@import "../../bower_components/bootstrap/scss/_grid.scss";

// Диаметр окружности
$diameter: 100px;

// Главный контейнер; 100% высоты и ширины вьюпорта
.main-cont {
	background-color: #BBDEFB;
	height: 100vh;
	width: 100vw;
	padding: 0;
	// Включение аппаратного ускорения (наверное)
	transform: translateZ(0);
	overflow: hidden;
}

// Окружность; анимирована; выровнена по центру вьюпорта
.main-circle {
	background-color: #E57373;
	border-radius: 50%;
	height: $diameter;
	width: $diameter;
	position: absolute;
	top: 50%;
	left: 50%;
	// margin: (-$diameter / 2) 0 0 (-$diameter / 2);
	transform: translate(-50%, -50%);
}

// Блок (100% вьюпорта) для окружности, выровненной по центру вьюпорта; прямые анимации
.cont-linear {
	background-color: rgba(255, 152, 0, 0.5);
	height: 100vh;
	width: 100vw;
	position: absolute;
	top: 0%;
	left: 0%;
}

// Блок (100% вьюпорта) для окружности, выровненной по верхнему краю вьюпорта; круговые анимации
.cont-orbit {
	background-color: #fff;
	height: 100vh;
	width: $diameter;
	margin: 0 auto;
	// Окружность, для анимации врацения по кругу
	.orbit-circle {
		@extend .main-circle;
		top: calc(0% + #{$diameter / 2});
	}
}

// Блок для запуска анимации мигания окружности
.circle-blinking {
	animation: blinking 1s infinite alternate ease-in-out;
}

// Блок для запуска анимации движения окружности (верх-низ)
.circle-top-bot {
	// animation: top-bot 5s linear 3s 5 normal none running;
	animation-name: top-bot;
	animation-duration: 5s;
	animation-timing-function: linear;
	animation-delay: 3s;
	animation-iteration-count: 5;
	animation-direction: normal;
	animation-fill-mode: none;
	animation-play-state: running;
}

// Блок для запуска анимации движения окружности (лево-право)
.circle-left-right {
	animation: left-right 5s linear 3s 5 normal none running;
}

// Блок для запуска анимации вращения окружности по кругу (спин)
.circle-clockwise-spin {
	animation: clockwise-spin 5s linear 3s 5 normal none running;
}

// Анимация мигания
@keyframes blinking {
	0% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}

// Анимация движения окружности (верх-низ)
@keyframes top-bot {
	0% {
		left: 0%;
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	25% {
		left: 0%;
		top: calc(-50% + #{$diameter / 2});
		transition: translate3d(left, top, 0);
	}
	30% {
		left: 0%;
		top: calc(-50% + #{$diameter / 2});
		transition: translate3d(left, top, 0);
	}
	50% {
		left: 0%;
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	75% {
		left: 0%;
		top: calc(50% - #{$diameter / 2});
		transition: translate3d(left, top, 0);
	}
	80% {
		left: 0%;
		top: calc(50% - #{$diameter / 2});
		transition: translate3d(left, top, 0);
	}
	100% {
		left: 0%;
		top: 0%;
		transition: translate3d(left, top, 0);
	}
}

// Анимация движения окружности (лево-право)
@keyframes left-right {
	0% {
		left: 0%;
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	25% {
		left: calc(-50% + #{$diameter / 2});
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	30% {
		left: calc(-50% + #{$diameter / 2});
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	50% {
		left: 0%;
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	75% {
		left: calc(50% - #{$diameter / 2});
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	80% {
		left: calc(50% - #{$diameter / 2});
		top: 0%;
		transition: translate3d(left, top, 0);
	}
	100% {
		left: 0%;
		top: 0%;
		transition: translate3d(left, top, 0);
	}
}
	// 0% {
	// 	left: 0%;
	// 	top: 0%;
	// 	transition: translate3d(left, top, 0);
	// }
	// 50% {
	// 	left: calc(-50% + #{$diameter / 2});
	// 	top: 0%;
	// 	transition: translate3d(left, top, 0);
	// }
	// 100% {
	// 	left: 0%;
	// 	top: 0%;
	// 	transition: translate3d(left, top, 0);
	// }
	// }
// Анимация вращения окружности по кругу (спин)
@keyframes clockwise-spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}